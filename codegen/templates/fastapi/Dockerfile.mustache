# This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
# If a copy of the MPL was not distributed with this file, You can obtain one at https://mozilla.org/MPL/2.0/.

FROM python:{{pythonVersion}}-slim as prod

# start as root
USER root

# install os-level dependencies & set up dedicated user for this container
RUN apt-get update && \
    apt-get install -y --no-install-recommends python3-pip build-essential && \
    rm -rf /var/lib/apt/lists/* && \
    python -m pip install --upgrade pip && \
    pip cache purge && \
    groupadd -g {{gid}} {{user}} && \
    useradd --no-log-init -g {{gid}} -u {{uid}} {{user}} && \
    mkdir -p /home/{{user}}/{{packageName}} && \
    mkdir -p /home/{{user}}/{{packageName}}/src-generated && \
    chown -R {{user}}:{{user}} /home/{{user}} && \
    mkdir -m 777 -p "{{dataDir}}" && \
    chown -R {{user}}:{{user}} "{{dataDir}}"

# install impl python libraries for this user only
# do this now as they don't change often so the build can use caching
USER {{user}}

# make sure user's python libs can be used later
ENV PATH="${PATH}:/home/{{user}}/.local/bin"

# install python libraries for this user only
COPY ./src-generated/requirements.txt /tmp/requirements.txt

RUN pip install --no-cache-dir -r /tmp/requirements.txt  && pip cache purge

# copy all files to the container and make our user own them
COPY --chown={{user}}:{{user}} ./src-generated /home/{{user}}/{{packageName}}/src-generated
COPY --chown={{user}}:{{user}} ./src/impl /home/{{user}}/{{packageName}}/src-generated/src/{{packageName}}/impl

# run the actual (generated) app inside its directory
WORKDIR /home/{{user}}/{{packageName}}/src-generated

ENV PYTHONPATH="${PYTHONPATH}:/home/{{user}}/{{packageName}}/src-generated/src/"

ENTRYPOINT ["uvicorn" , "{{packageName}}.main:app", "--host", "0.0.0.0", "--port",  "{{serverPort}}"]

FROM prod as test

COPY --chown={{user}}:{{user}} ./src/.coveragerc /home/{{user}}/{{packageName}}/.coveragerc

# Add dev requirements
RUN pip install --no-cache-dir -r dev-requirements.txt  && pip cache purge

ENV IS_TEST=true
ENTRYPOINT ["bash", "-c"]
